[{"F:\\TryTruffle\\react-app\\src\\index.js":"1","F:\\TryTruffle\\react-app\\src\\reportWebVitals.js":"2","F:\\VividhProject1\\pirates-catcher\\src\\index.js":"3","F:\\VividhProject1\\pirates-catcher\\src\\reportWebVitals.js":"4","F:\\VividhProject1\\pirates-catcher\\src\\App.js":"5","F:\\VividhProject1\\pirates-catcher\\src\\serviceWorker.js":"6","F:\\VividhProject1\\pirates-catcher\\src\\Routes.js":"7","F:\\VividhProject1\\pirates-catcher\\src\\components\\header.js":"8","F:\\VividhProject1\\pirates-catcher\\src\\Home.js":"9","F:\\VividhProject1\\pirates-catcher\\src\\history.js":"10","F:\\VividhProject1\\pirates-catcher\\src\\components\\features.jsx":"11","F:\\VividhProject1\\pirates-catcher\\src\\components\\navigation.jsx":"12","F:\\VividhProject1\\pirates-catcher\\src\\components\\about.jsx":"13","F:\\VividhProject1\\pirates-catcher\\src\\components\\contact.jsx":"14","F:\\VividhProject1\\pirates-catcher\\src\\components\\Video.js":"15","F:\\VividhProject1\\pirates-catcher\\src\\components\\DirectorDashBoard\\DirectorDashBoard.js":"16","F:\\VividhProject1\\pirates-catcher\\src\\components\\DirectorDashBoard\\header.js":"17","F:\\VividhProject1\\pirates-catcher\\src\\components\\DirectorDashBoard\\navigation.jsx":"18","F:\\VividhProject1\\pirates-catcher\\src\\components\\DirectorDashBoard\\features.jsx":"19","F:\\VividhProject1\\pirates-catcher\\src\\components\\MovieRegistration\\RegistrationForm.js":"20","F:\\VividhProject1\\pirates-catcher\\src\\components\\Ideation\\IdeationForm.js":"21","F:\\VividhProject1\\pirates-catcher\\src\\components\\Preproduction\\PreproductionForm.js":"22","F:\\VividhProject1\\pirates-catcher\\src\\components\\Production\\ProductionForm.js":"23","F:\\VividhProject1\\pirates-catcher\\src\\components\\ipfs.js":"24","F:\\VividhProject1\\pirates-catcher\\src\\components\\FinalEditing\\Finalediting.js":"25"},{"size":511,"mtime":1608201516851,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":753,"mtime":1610113829549,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":3885,"mtime":1610286226363,"results":"32","hashOfConfig":"30"},{"size":5227,"mtime":1608274652377,"results":"33","hashOfConfig":"30"},{"size":554,"mtime":1609647397866,"results":"34","hashOfConfig":"30"},{"size":1517,"mtime":1609770087772,"results":"35","hashOfConfig":"30"},{"size":3152,"mtime":1609400592334,"results":"36","hashOfConfig":"30"},{"size":86,"mtime":1609220769543,"results":"37","hashOfConfig":"30"},{"size":846,"mtime":1609169694591,"results":"38","hashOfConfig":"30"},{"size":1720,"mtime":1609308778802,"results":"39","hashOfConfig":"30"},{"size":1316,"mtime":1609309130829,"results":"40","hashOfConfig":"30"},{"size":4845,"mtime":1608274652369,"results":"41","hashOfConfig":"30"},{"size":2398,"mtime":1609769921645,"results":"42","hashOfConfig":"30"},{"size":3728,"mtime":1609945922253,"results":"43","hashOfConfig":"30"},{"size":2388,"mtime":1610121518395,"results":"44","hashOfConfig":"30"},{"size":1463,"mtime":1609945366645,"results":"45","hashOfConfig":"30"},{"size":849,"mtime":1609931456765,"results":"46","hashOfConfig":"30"},{"size":8683,"mtime":1610267284090,"results":"47","hashOfConfig":"30"},{"size":7566,"mtime":1610267806332,"results":"48","hashOfConfig":"30"},{"size":8174,"mtime":1610272078796,"results":"49","hashOfConfig":"30"},{"size":8343,"mtime":1610547160994,"results":"50","hashOfConfig":"30"},{"size":136,"mtime":1610274735953,"results":"51","hashOfConfig":"30"},{"size":8181,"mtime":1610547068948,"results":"52","hashOfConfig":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aup6ah",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"h4p0tl",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"61"},"F:\\TryTruffle\\react-app\\src\\index.js",[],"F:\\TryTruffle\\react-app\\src\\reportWebVitals.js",[],["119","120"],"F:\\VividhProject1\\pirates-catcher\\src\\index.js",["121"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './Routes';\n\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(\n  \n  <React.StrictMode>\n    <BrowserRouter>\n      <App/>\n   \n    </BrowserRouter>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.unregister();\n",["122","123"],"F:\\VividhProject1\\pirates-catcher\\src\\reportWebVitals.js",[],"F:\\VividhProject1\\pirates-catcher\\src\\App.js",["124","125","126","127","128","129"],"//import logo from './logo.svg';\n//import './App.css';\n\nimport PiratesCatcher from './abis/PiratesCatcher.json';\nimport React, { Component } from 'react';\nimport Navigation from './components/navigation';\nimport Header from './components/header.js';\nimport Features from './components/features';\nimport About from './components/about';\nimport Video from './components/Video';\nimport Director from './components/DirectorDashBoard/DirectorDashBoard';\nimport Home from './Home';\nimport RegistrationForm from './components/MovieRegistration/RegistrationForm';\nimport IdeationForm from './components/Ideation/IdeationForm';\nimport PreproductionForm from './components/Preproduction/PreproductionForm';\nimport ProductionForm from './components/Production/ProductionForm';\nimport FinalEditing from './components/FinalEditing/Finalediting';\n//import Services from './components/services';\n//import Gallery from './components/gallery';\n//import Testimonials from './components/testimonials';\n//import Team from './components/Team';\nimport Contact from './components/contact';\nimport JsonData from './data/data.json';\n//import Identicon from 'identicon.js';\nimport Web3 from 'web3';\nimport { BrowserRouter as Router ,Switch,Route} from 'react-router-dom';\nimport Routes from './Routes';\nimport './App.css';\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      landingPageData: {}\n    }\n\n    \n  }\n  getlandingPageData() {\n    this.setState({landingPageData : JsonData})\n  }\n  async componentDidMount()\n  {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    this.getlandingPageData();\n  }\n  async loadWeb3()\n  {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      try {\n        // Request account access if needed\n        await window.ethereum.enable();\n        console.log(window.web3);\n        //console.log(web3.eth.getAccounts());\n        // Acccounts now exposed\n      } catch (error) {\n        // User denied account access...\n      }\n    }\n    // Legacy dapp browsers...\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n      console.log(window.web3);\n      // Acccounts always exposed\n    }\n    // Non-dapp browsers...\n    else {\n      console.log(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData()\n  {\n    const web3=window.web3;\n    const accounts=await web3.eth.getAccounts();\n    //var paccount = accounts[0];\n    //var oldaccount=this.state.account;\n    this.setState({account:accounts[0]});\n    window.ethereum.on('accountsChanged', function (accounts) {\n      // Time to reload your interface with accounts[0]!\n      this.setState({account:accounts[0]});\n    }.bind(this));\n\n    console.log(web3);\n    console.log(accounts);\n   // \n   const networkId=await web3.eth.net.getId();\n    const networkdata=PiratesCatcher.networks[networkId];\n    if(networkdata)\n    {\n      const piratescatcher=new web3.eth.Contract(PiratesCatcher.abi,networkdata.address);\n      console.log(piratescatcher);\n    }\n    \n    \n  }\n  \n\n  render() {\n    return (\n     \n      \n        <Router>\n          <div className=\"App\">\n        <Switch>\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/Video\" component={Video}></Route>\n        <Route path=\"/Director\" component={Director}></Route>\n        <Route path=\"/Registration\" component={RegistrationForm}></Route>\n        <Route path=\"/Ideation\" component={IdeationForm}></Route>\n        <Route path=\"/Preproduction\" component={PreproductionForm}></Route>\n        <Route path=\"/Production\" component={ProductionForm}></Route>\n        <Route path=\"/FinalEditing\" component={FinalEditing}></Route>\n        </Switch>\n        </div>\n        </Router>\n     \n     \n      \n        \n    );\n  }\n}\n\nexport default App;\n","F:\\VividhProject1\\pirates-catcher\\src\\serviceWorker.js",[],"F:\\VividhProject1\\pirates-catcher\\src\\Routes.js",[],"F:\\VividhProject1\\pirates-catcher\\src\\components\\header.js",["130","131"],"import React, { Component } from \"react\";\r\nimport '../App.css';\r\nimport history from '../history';\r\nimport {Link} from 'react-router-dom';\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header id=\"header\">\r\n        <div className=\"intro\">\r\n          <div className=\"overlay2\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 col-md-offset-2 intro-text\">\r\n                  <h1>\r\n                    {this.props.data ? this.props.data.title : \"Loading\"}\r\n                    <span></span>\r\n                  </h1>\r\n                  <p>\r\n                    {this.props.data ? this.props.data.paragraph : \"Loading\"}\r\n                  </p>\r\n                  <form>\r\n                    \r\n                  <button\r\n                    onClick={() => window.open('/Video')}\r\n                    className=\"btn btn-custom btn-lg page-scroll\"\r\n                  >\r\n                    Start Playing\r\n                  </button>{\" \"}\r\n                  <button\r\n                    onClick={() => window.open('/Director')}\r\n                    className=\"btn btn-custom btn-lg page-scroll\"\r\n                  >\r\n                    Director Login\r\n                  </button>{\" \"}\r\n                  \r\n                  \r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n         \r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","F:\\VividhProject1\\pirates-catcher\\src\\Home.js",["132","133"],"//import logo from './logo.svg';\r\n//import './App.css';\r\n\r\nimport PiratesCatcher from './abis/PiratesCatcher.json';\r\nimport React, { Component } from 'react';\r\nimport Navigation from './components/navigation';\r\nimport Header from './components/header.js';\r\nimport Features from './components/features';\r\nimport About from './components/about';\r\n//import Services from './components/services';\r\n//import Gallery from './components/gallery';\r\n//import Testimonials from './components/testimonials';\r\n//import Team from './components/Team';\r\nimport Contact from './components/contact';\r\nimport JsonData from './data/data.json';\r\n//import Identicon from 'identicon.js';\r\nimport Web3 from 'web3';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './Routes';\r\nimport './App.css';\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      landingPageData: {}\r\n    }\r\n\r\n    \r\n  }\r\n  getlandingPageData() {\r\n    this.setState({landingPageData : JsonData})\r\n  }\r\n  async componentDidMount()\r\n  {\r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n    this.getlandingPageData();\r\n  }\r\n  async loadWeb3()\r\n  {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      try {\r\n        // Request account access if needed\r\n        await window.ethereum.enable();\r\n        console.log(window.web3);\r\n        //console.log(web3.eth.getAccounts());\r\n        // Acccounts now exposed\r\n      } catch (error) {\r\n        // User denied account access...\r\n      }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n      console.log(window.web3);\r\n      // Acccounts always exposed\r\n    }\r\n    // Non-dapp browsers...\r\n    else {\r\n      console.log(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData()\r\n  {\r\n    const web3=window.web3;\r\n    const accounts=await web3.eth.getAccounts();\r\n    //var paccount = accounts[0];\r\n    //var oldaccount=this.state.account;\r\n    this.setState({account:accounts[0]});\r\n    window.ethereum.on('accountsChanged', function (accounts) {\r\n      // Time to reload your interface with accounts[0]!\r\n      this.setState({account:accounts[0]});\r\n    }.bind(this));\r\n\r\n    console.log(web3);\r\n    console.log(accounts);\r\n   // \r\n   const networkId=await web3.eth.net.getId();\r\n    const networkdata=PiratesCatcher.networks[networkId];\r\n    if(networkdata)\r\n    {\r\n      const piratescatcher=new web3.eth.Contract(PiratesCatcher.abi,networkdata.address);\r\n      console.log(piratescatcher);\r\n    }\r\n    \r\n    \r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n     \r\n      <div>\r\n        \r\n        \r\n        <Navigation />\r\n        <Header data={this.state.landingPageData.Header} />\r\n        <Features data={this.state.landingPageData.Features} />\r\n        <About data={this.state.landingPageData.About} />\r\n        <Contact data={this.state.landingPageData.Contact} />\r\n        \r\n      </div>\r\n     \r\n      \r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","F:\\VividhProject1\\pirates-catcher\\src\\history.js",[],"F:\\VividhProject1\\pirates-catcher\\src\\components\\features.jsx",["134"],"import React, { Component } from \"react\";\r\n\r\nexport class features extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"features\" className=\"text-center\">\r\n        <div className=\"container\">\r\n          <div className=\"col-md-10 col-md-offset-1 section-title\">\r\n            <h2>Features</h2>\r\n          </div>\r\n          <div className=\"row\">\r\n            {this.props.data\r\n              ? this.props.data.map((d,i) => (\r\n                  <div  key={`${d.title}-${i}`} className=\"col-xs-6 col-md-3\">\r\n                    {\" \"}\r\n                    <img src={d.icon} height=\"250px\" width=\"250px\"></img>\r\n                    <h3>{d.title}</h3>\r\n                    \r\n                  </div>\r\n                ))\r\n              : \"Loading...\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default features;\r\n","F:\\VividhProject1\\pirates-catcher\\src\\components\\navigation.jsx",[],"F:\\VividhProject1\\pirates-catcher\\src\\components\\about.jsx",[],"F:\\VividhProject1\\pirates-catcher\\src\\components\\contact.jsx",[],"F:\\VividhProject1\\pirates-catcher\\src\\components\\Video.js",[],"F:\\VividhProject1\\pirates-catcher\\src\\components\\DirectorDashBoard\\DirectorDashBoard.js",["135","136","137","138"],"\r\n\r\nimport PiratesCatcher from '../../abis/PiratesCatcher.json';\r\nimport React, { Component } from 'react';\r\nimport Navigation from './navigation';\r\nimport Header from './header.js';\r\nimport Features from './features';\r\n\r\n\r\nimport Web3 from 'web3';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport '../../App';\r\nclass DirectorDashBoard extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      yourmovies:[{\"title\":\"ABCD\",\"icon\":\"abcd\"}],\r\n      \r\n    }\r\n\r\n    \r\n  }\r\n \r\n  async componentDidMount()\r\n  {\r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n    \r\n  }\r\n  async loadWeb3()\r\n  {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      try {\r\n        // Request account access if needed\r\n        await window.ethereum.enable();\r\n        console.log(window.web3);\r\n        //console.log(web3.eth.getAccounts());\r\n        // Acccounts now exposed\r\n      } catch (error) {\r\n        // User denied account access...\r\n      }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n      console.log(window.web3);\r\n      // Acccounts always exposed\r\n    }\r\n    // Non-dapp browsers...\r\n    else {\r\n      console.log(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData()\r\n  {\r\n    const web3=window.web3;\r\n    const accounts=await web3.eth.getAccounts();\r\n    //var paccount = accounts[0];\r\n    //var oldaccount=this.state.account;\r\n    this.setState({account:accounts[0]});\r\n    window.ethereum.on('accountsChanged', function (accounts) {\r\n      // Time to reload your interface with accounts[0]!\r\n      this.setState({account:accounts[0]});\r\n    }.bind(this));\r\n\r\n    console.log(web3);\r\n    console.log(accounts);\r\n   // \r\n   const networkId=await web3.eth.net.getId();\r\n   console.log(networkId);\r\n    const networkdata=PiratesCatcher.networks[networkId];\r\n    console.log(networkdata);\r\n    if(networkdata)\r\n    {\r\n      const piratescatcher=new web3.eth.Contract(PiratesCatcher.abi,networkdata.address);\r\n      console.log(piratescatcher);\r\n      var counter=await piratescatcher.methods.counter().call();\r\n      console.log(\"cc\",counter);\r\n      var movie=await piratescatcher.methods.getmovie(counter).call();\r\n      console.log(movie);\r\n      //var checkreporters=await piratescatcher.methods.getReporters(counter).call();\r\n      //console.log(checkreporters);\r\n      var array =[];\r\n      for(var i=1;i<=counter;i++)\r\n      {\r\n        console.log(\"i=\",i);\r\n        var movie=await piratescatcher.methods.getmovie(i).call();\r\n        //movie.directoraddress=this.state.account;\r\n        if(movie.directoraddress==this.state.account)\r\n        {\r\n            var movieobj=new Object();\r\n            movieobj.title=movie.name;\r\n            movieobj.icon=movie.shoothases;\r\n            array.push(movieobj);\r\n\r\n            //reporters\r\n          /* var checkreporters=await piratescatcher.methods.getReporters(i).call();\r\n           console.log(checkreporters);\r\n           if(checkreporters.length!=0)\r\n           {\r\n\r\n           }*/\r\n        }\r\n        //console.log(movie);\r\n      }\r\n      this.setState({yourmovies:array});\r\n      //console.log(array);\r\n    }\r\n    \r\n    \r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n     \r\n      <div>\r\n        \r\n        \r\n        <Navigation account ={this.state.account}/>\r\n        <Header title=\"Welcome\" paragraph={this.state.account}/>\r\n        <Features data={this.state.yourmovies} />\r\n        \r\n        \r\n        \r\n      </div>\r\n     \r\n      \r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default DirectorDashBoard;\r\n","F:\\VividhProject1\\pirates-catcher\\src\\components\\DirectorDashBoard\\header.js",[],"F:\\VividhProject1\\pirates-catcher\\src\\components\\DirectorDashBoard\\navigation.jsx",[],["139","140"],"F:\\VividhProject1\\pirates-catcher\\src\\components\\DirectorDashBoard\\features.jsx",["141"],"import React, { Component } from \"react\";\r\n\r\nexport class features extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"features\" className=\"text-center\">\r\n        <div className=\"container\">\r\n          <div className=\"col-md-10 col-md-offset-1 section-title\">\r\n            <h2>Your movies</h2>\r\n          </div>\r\n          <div className=\"row\">\r\n            {this.props.data\r\n              ? this.props.data.map((d,i) => (\r\n                  <div  key={`${d.title}-${i}`} className=\"col-xs-6 col-md-3\">\r\n                    {\" \"}\r\n                    <img src={d.icon} height=\"280px\" width=\"280px\"></img>\r\n                    <h3>{d.title}</h3>\r\n                    \r\n                  </div>\r\n                ))\r\n              : \"Loading...\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default features;\r\n","F:\\VividhProject1\\pirates-catcher\\src\\components\\MovieRegistration\\RegistrationForm.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],"import React, {\r\n  Component\r\n} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import Select from 'react-select';\r\nimport PiratesCatcher from '../../abis/PiratesCatcher.json';\r\nimport Web3 from 'web3';\r\nimport {\r\n  Form,\r\n  Modal,\r\n  Header,\r\n  Icon,\r\n  Button,\r\n  Input,\r\n  Dropdown,\r\n  Menu,\r\n  Radio,\r\n  Message,\r\n  Segment,\r\n  Checkbox,\r\n  Confirm\r\n} from 'semantic-ui-react';\r\n//import {\r\n  //DateInput\r\n//} from 'semantic-ui-calendar-react';\r\n\r\nexport default class RegistrationForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      id:0,\r\n      name:'',\r\n      genre:'',\r\n      director:'',\r\n      writer:'',\r\n      language:'',\r\n      country:'',\r\n      piratescatcher:null\r\n     \r\n      \r\n      \r\n    };\r\n   \r\n  }\r\n\r\n  async componentDidMount()\r\n  {\r\n    await this.loadWeb3();\r\n    await this.loadBlockchainData();\r\n  }\r\n  async loadWeb3()\r\n  {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      try {\r\n        // Request account access if needed\r\n        await window.ethereum.enable();\r\n        console.log(window.web3);\r\n        //console.log(web3.eth.getAccounts());\r\n        // Acccounts now exposed\r\n      } catch (error) {\r\n        // User denied account access...\r\n      }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n      console.log(window.web3);\r\n      // Acccounts always exposed\r\n    }\r\n    // Non-dapp browsers...\r\n    else {\r\n      console.log(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData()\r\n  {\r\n    console.log(\"props\",this.props.location.state.id);\r\n    const web3=window.web3;\r\n    const accounts=await web3.eth.getAccounts();\r\n    //var paccount = accounts[0];\r\n    //var oldaccount=this.state.account;\r\n    this.setState({account:accounts[0]});\r\n    window.ethereum.on('accountsChanged', function (accounts) {\r\n      // Time to reload your interface with accounts[0]!\r\n      alert(\"accoun changed\")\r\n      this.setState({account:accounts[0]});\r\n    }.bind(this));\r\n\r\n    console.log(web3);\r\n    console.log(accounts);\r\n   // \r\n   const networkId=await web3.eth.net.getId();\r\n    const networkdata=PiratesCatcher.networks[networkId];\r\n    if(networkdata)\r\n    {\r\n      const piratescatcher=new web3.eth.Contract(PiratesCatcher.abi,networkdata.address);\r\n      console.log(piratescatcher);\r\n      this.setState({piratescatcher});\r\n      const counter=await piratescatcher.methods.counter().call();\r\n      this.setState({id:counter});\r\n    }\r\n    \r\n    \r\n  }\r\n  \r\n  \r\n  //handleClose = () => this.setState({ modalOpen: false })\r\n  \r\n  \r\n  handleconf = async (event) => {\r\n    event.preventDefault();\r\n   \r\n    //console.log(parseInt(this.state.quant)+10);\r\n    //console.log(this.state.id + this.state.toc + this.state.fromc + this.state.fno+this.state.tno+this.state.date+this.state.defcheck+this.state.emailid);\r\n    try {\r\n      //let reacth;\r\n      //let travel;\r\n      //test = (this.state.id + this.state.toc + this.state.fromc + this.state.expl+this.state.quant).toString();\r\n      //test = test.toLowerCase();\r\n      //console.log(test);\r\n      //reacth = crypt.SHA256(test).toString();\r\n      //console.log(reacth);\r\n      //const accounts = await web3.eth.getAccounts();\r\n      //console.log(accounts[0]);\r\n      //await trackpass.methods.storegold(reacth,(this.state.id).toString(),(this.state.quant).toString(),(this.state.toc).toString(),(this.state.fromc).toString(),(this.state.expl).toString(),parseInt(this.state.billamt)).send({\r\n        //from: accounts[0]\r\n      //});\r\n      \r\n      await this.state.piratescatcher.methods.register((this.state.name).toString(),(this.state.director).toString(),(this.state.writer).toString(),(this.state.genre).toString(),(this.state.language).toString(),(this.state.country).toString()).send({\r\n        from: this.state.account\r\n      });\r\n\r\n     \r\n      \r\n      \r\n\r\n      this.setState({\r\n        loading: false,\r\n        name:'',\r\n        director:'',\r\n        writer:'',\r\n        genre:'',\r\n        language:'',\r\n        country:''\r\n      });\r\n\r\n      window.open('/Ideation');\r\n    } catch (err) {\r\n\r\n      console.log(err);\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n  \r\n  \r\n  handleChange = (event, {\r\n    name,\r\n    value\r\n  }) => {\r\n    if (this.state.hasOwnProperty(name)) {\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  render() {\r\n    return ( \r\n      <div>\r\n      <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"/>\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n      <\r\n      Segment inverted color = 'black'>\r\n      \r\n      <h1 > <font color=\"white\">Movie Registration Form</font> < /h1> \r\n      <Segment inverted color = \"grey\" >\r\n      <\r\n      Message attached header = 'Welcome to PiratesCatcher'\r\n      content = 'Enter your movie details'\r\n      icon = \"searchengin\"\r\n      color = 'black' /\r\n      >\r\n      <\r\n      Form >\r\n      <\r\n      br / >\r\n\r\n\r\n      <Form.Group widths='equal'>\r\n      <\r\n      Form.Field >\r\n      <\r\n      Input label = \"Id\"\r\n      fluid ref = {\r\n        (input) => {\r\n          this.id = input;\r\n        }\r\n      }\r\n      //  labelPosition=\"\"\r\n      value = {\r\n        this.state.id\r\n      }\r\n      onChange = {\r\n        event => this.setState({\r\n          id: event.target.value\r\n        })\r\n      }\r\n\r\n      disabled={true}\r\n      /> \r\n      </Form.Field>\r\n      </Form.Group>\r\n      <br/>\r\n              <Form.Group widths='equal'>\r\n      <\r\n      Form.Field >\r\n      <\r\n      Input label = \"Name\"\r\n\r\n      fluid ref = {\r\n        (input) => {\r\n          this.name = input;\r\n        }\r\n      }\r\n      //labelPosition=\"\"\r\n      value = {\r\n        this.state.name\r\n      }\r\n      onChange = {\r\n        event => this.setState({\r\n          name: event.target.value\r\n        })\r\n      }\r\n      /> \r\n      </Form.Field>\r\n\r\n      <\r\n      Form.Field >\r\n      <\r\n      Input label = \"Director\"\r\n      fluid ref = {\r\n        (input) => {\r\n          this.director = input;\r\n        }\r\n      }\r\n      //  labelPosition=\"\"\r\n      value = {\r\n        this.state.director\r\n      }\r\n      onChange = {\r\n        event => this.setState({\r\n          director: event.target.value\r\n        })\r\n      }\r\n      /> \r\n      </ Form.Field>\r\n\r\n      </Form.Group><br/>\r\n      \r\n          \r\n      \r\n      <br/>\r\n\r\n      <Form.Group widths='equal'>\r\n      <\r\n      Form.Field >\r\n      <\r\n      Input label = \"Writer\"\r\n      fluid ref = {\r\n        (input) => {\r\n          this.writer = input;\r\n        }\r\n      }\r\n      //  labelPosition=\"\"\r\n      value = {\r\n        this.state.writer\r\n      }\r\n      onChange = {\r\n        event => this.setState({\r\n          writer: event.target.value\r\n        })\r\n      }\r\n      /> \r\n      </ Form.Field>\r\n\r\n<\r\nForm.Field >\r\n<\r\nInput label = \"Genre\"\r\nfluid ref = {\r\n  (input) => {\r\n    this.genre = input;\r\n  }\r\n}\r\n//  labelPosition=\"\"\r\nvalue = {\r\n  this.state.genre\r\n}\r\nonChange = {\r\n  event => this.setState({\r\n    genre: event.target.value\r\n  })\r\n}\r\n/> \r\n</ Form.Field>\r\n      </Form.Group>\r\n      <br/>\r\n\r\n      \r\n     \r\n     \r\n      <br/>\r\n\r\n      <Form.Group widths='equal'>\r\n      <\r\n      Form.Field >\r\n      <\r\n      Input label = \"Language\"\r\n      fluid ref = {\r\n        (input) => {\r\n          this.language = input;\r\n        }\r\n      }\r\n      //  labelPosition=\"\"\r\n      value = {\r\n        this.state.language\r\n      }\r\n      onChange = {\r\n        event => this.setState({\r\n          language: event.target.value\r\n        })\r\n      }\r\n      /> \r\n      </ Form.Field>\r\n\r\n<\r\nForm.Field >\r\n<\r\nInput label = \"Country\"\r\nfluid ref = {\r\n  (input) => {\r\n    this.country = input;\r\n  }\r\n}\r\n//  labelPosition=\"\"\r\nvalue = {\r\n  this.state.country\r\n}\r\nonChange = {\r\n  event => this.setState({\r\n    country: event.target.value\r\n  })\r\n}\r\n/> \r\n</ Form.Field>\r\n      </Form.Group>\r\n      <br/>\r\n\r\n      \r\n      \r\n      \r\n      <br/>\r\n      \r\n      \r\n       <\r\n      br / >\r\n      <\r\n      Button loading = {\r\n        this.state.loading\r\n      }\r\n      disabled = {\r\n        this.state.id=='' || this.state.name=='' || this.state.director=='' || this.state.writer==''  || this.state.genre=='' || this.state.language=='' || this.state.country=='' \r\n      }\r\n      primary onClick = {\r\n        this.handleconf\r\n      }\r\n       > Save and Proceed < /Button>\r\n      \r\n      \r\n      </Form> \r\n      </Segment>  </Segment>\r\n      </div>\r\n    );\r\n  }\r\n}","F:\\VividhProject1\\pirates-catcher\\src\\components\\Ideation\\IdeationForm.js",["158","159","160","161","162","163","164","165","166","167","168","169"],"import React, {\r\n    Component\r\n  } from 'react';\r\n  import ReactDOM from 'react-dom';\r\n  //import Select from 'react-select';\r\n  import PiratesCatcher from '../../abis/PiratesCatcher.json';\r\n  import Web3 from 'web3';\r\n  import {\r\n    Form,\r\n    Modal,\r\n    Header,\r\n    Icon,\r\n    Button,\r\n    Input,\r\n    Dropdown,\r\n    Menu,\r\n    Radio,\r\n    Message,\r\n    Segment,\r\n    Checkbox,\r\n    Confirm\r\n  } from 'semantic-ui-react';\r\n  //import {\r\n    //DateInput\r\n  //} from 'semantic-ui-calendar-react';\r\n  \r\n  export default class RegistrationForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n        id:0,\r\n        coreidea:'',\r\n        producer:'',\r\n        piratescatcher:null\r\n        \r\n      };\r\n     \r\n    }\r\n  \r\n    async componentDidMount()\r\n    {\r\n      await this.loadWeb3();\r\n      await this.loadBlockchainData();\r\n    }\r\n    async loadWeb3()\r\n    {\r\n      if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          console.log(window.web3);\r\n          //console.log(web3.eth.getAccounts());\r\n          // Acccounts now exposed\r\n        } catch (error) {\r\n          // User denied account access...\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n        console.log(window.web3);\r\n        // Acccounts always exposed\r\n      }\r\n      // Non-dapp browsers...\r\n      else {\r\n        console.log(\r\n          \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n        );\r\n      }\r\n    }\r\n  \r\n    async loadBlockchainData()\r\n    {\r\n      //console.log(\"props\",this.props.location.state.id);\r\n      const web3=window.web3;\r\n      const accounts=await web3.eth.getAccounts();\r\n      //var paccount = accounts[0];\r\n      //var oldaccount=this.state.account;\r\n      this.setState({account:accounts[0]});\r\n      window.ethereum.on('accountsChanged', function (accounts) {\r\n        // Time to reload your interface with accounts[0]!\r\n        alert(\"accoun changed\")\r\n        this.setState({account:accounts[0]});\r\n      }.bind(this));\r\n  \r\n      console.log(web3);\r\n      console.log(accounts);\r\n     // \r\n     const networkId=await web3.eth.net.getId();\r\n      const networkdata=PiratesCatcher.networks[networkId];\r\n      if(networkdata)\r\n      {\r\n        const piratescatcher=new web3.eth.Contract(PiratesCatcher.abi,networkdata.address);\r\n        console.log(piratescatcher);\r\n        this.setState({piratescatcher});\r\n        const counter=await piratescatcher.methods.counter().call();\r\n        this.setState({id:counter});\r\n      }\r\n      \r\n      \r\n    }\r\n    \r\n    \r\n    //handleClose = () => this.setState({ modalOpen: false })\r\n    \r\n   \r\n  \r\n   \r\n    handleconf = async (event) => {\r\n      event.preventDefault();\r\n     \r\n      //console.log(parseInt(this.state.quant)+10);\r\n      //console.log(this.state.id + this.state.toc + this.state.fromc + this.state.fno+this.state.tno+this.state.date+this.state.defcheck+this.state.emailid);\r\n      try {\r\n        //let reacth;\r\n        //let travel;\r\n        //test = (this.state.id + this.state.toc + this.state.fromc + this.state.expl+this.state.quant).toString();\r\n        //test = test.toLowerCase();\r\n        //console.log(test);\r\n        //reacth = crypt.SHA256(test).toString();\r\n        //console.log(reacth);\r\n        //const accounts = await web3.eth.getAccounts();\r\n        //console.log(accounts[0]);\r\n        //await trackpass.methods.storegold(reacth,(this.state.id).toString(),(this.state.quant).toString(),(this.state.toc).toString(),(this.state.fromc).toString(),(this.state.expl).toString(),parseInt(this.state.billamt)).send({\r\n          //from: accounts[0]\r\n        //});\r\n        //alert(this.state.id);\r\n        //alert(this.state.coreidea);\r\n        //alert(this.state.producer);\r\n       // await this.state.piratescatcher.methods.ideation((this.state.id),(this.state.coreidea).toString(),(this.state.producer).toString()).send({\r\n        //  from: this.state.account\r\n       // });\r\n  \r\n       \r\n        \r\n        \r\n  \r\n        this.setState({\r\n          loading: false,\r\n          id:0,\r\n          coreidea:'',\r\n          producer:''\r\n        });\r\n  \r\n        window.open('/Preproduction');\r\n      } catch (err) {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n         \r\n        });\r\n      }\r\n    }\r\n    \r\n    \r\n    handleChange = (event, {\r\n      name,\r\n      value\r\n    }) => {\r\n      if (this.state.hasOwnProperty(name)) {\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n    }\r\n    \r\n    \r\n  \r\n    render() {\r\n      return ( \r\n        <div>\r\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"/>\r\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n        <\r\n        Segment inverted color = 'black'>\r\n        \r\n        <h1 > <font color=\"white\">Ideation Form</font> < /h1> \r\n        <Segment inverted color = \"grey\" >\r\n        <\r\n        Message attached header = 'Welcome to PiratesCatcher'\r\n        content = 'Enter your movie ideas'\r\n        icon = \"searchengin\"\r\n        color = 'black' /\r\n        >\r\n        <\r\n        Form >\r\n        <\r\n        br / >\r\n  \r\n  \r\n        <Form.Group widths='equal'>\r\n        <\r\n        Form.Field >\r\n        <\r\n        Input label = \"Id\"\r\n        fluid ref = {\r\n          (input) => {\r\n            this.id = input;\r\n          }\r\n        }\r\n        //  labelPosition=\"\"\r\n        value = {\r\n          this.state.id\r\n        }\r\n        onChange = {\r\n          event => this.setState({\r\n            id: event.target.value\r\n          })\r\n        }\r\n  \r\n        \r\n        /> \r\n        </Form.Field>\r\n        </Form.Group>\r\n\r\n        <br/>\r\n                <Form.Group widths='equal'>\r\n        <\r\n        Form.Field >\r\n        <\r\n        Input label = \"Core Idea\"\r\n  \r\n        fluid ref = {\r\n          (input) => {\r\n            this.coreidea = input;\r\n          }\r\n        }\r\n        //labelPosition=\"\"\r\n        value = {\r\n          this.state.coreidea\r\n        }\r\n        onChange = {\r\n          event => this.setState({\r\n            coreidea: event.target.value\r\n          })\r\n        }\r\n        /> \r\n        </Form.Field>\r\n        </Form.Group>\r\n        <br/>\r\n        <Form.Group widths='equal'>\r\n        <\r\n        Form.Field >\r\n        <\r\n        Input label = \" Producer\"\r\n        fluid ref = {\r\n          (input) => {\r\n            this.producer = input;\r\n          }\r\n        }\r\n        //  labelPosition=\"\"\r\n        value = {\r\n          this.state.producer\r\n        }\r\n        onChange = {\r\n          event => this.setState({\r\n            producer: event.target.value\r\n          })\r\n        }\r\n        /> \r\n        </ Form.Field>\r\n  \r\n        </Form.Group><br/>\r\n        \r\n            \r\n        \r\n        <br/>\r\n  \r\n        \r\n        \r\n        \r\n         <\r\n        br / >\r\n        <\r\n        Button loading = {\r\n          this.state.loading\r\n        }\r\n        disabled = {\r\n          this.state.id=='' || this.state.coreidea=='' || this.state.producer==''\r\n        }\r\n        primary onClick = {\r\n          this.handleconf\r\n        }\r\n         > Save and Proceed < /Button>\r\n        \r\n        \r\n        </Form> \r\n        </Segment>  \r\n        </Segment>\r\n        </div>\r\n      );\r\n    }\r\n  }","F:\\VividhProject1\\pirates-catcher\\src\\components\\Preproduction\\PreproductionForm.js",["170","171","172","173","174","175","176","177","178","179","180","181","182"],"import React, {\r\n    Component\r\n  } from 'react';\r\n  import ReactDOM from 'react-dom';\r\n  //import Select from 'react-select';\r\n  import PiratesCatcher from '../../abis/PiratesCatcher.json';\r\n  import Web3 from 'web3';\r\n  import {\r\n    Form,\r\n    Modal,\r\n    Header,\r\n    Icon,\r\n    Button,\r\n    Input,\r\n    Dropdown,\r\n    Menu,\r\n    Radio,\r\n    Message,\r\n    Segment,\r\n    Checkbox,\r\n    Confirm\r\n  } from 'semantic-ui-react';\r\n  //import {\r\n    //DateInput\r\n  //} from 'semantic-ui-calendar-react';\r\n  \r\n  export default class RegistrationForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n        id:0,\r\n        cast:'',\r\n        budget:'',\r\n        shootlocation:'',\r\n        piratescatcher:null\r\n        \r\n      };\r\n     \r\n    }\r\n  \r\n    async componentDidMount()\r\n    {\r\n      await this.loadWeb3();\r\n      await this.loadBlockchainData();\r\n    }\r\n    async loadWeb3()\r\n    {\r\n      if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          console.log(window.web3);\r\n          //console.log(web3.eth.getAccounts());\r\n          // Acccounts now exposed\r\n        } catch (error) {\r\n          // User denied account access...\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n        console.log(window.web3);\r\n        // Acccounts always exposed\r\n      }\r\n      // Non-dapp browsers...\r\n      else {\r\n        console.log(\r\n          \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n        );\r\n      }\r\n    }\r\n  \r\n    async loadBlockchainData()\r\n    {\r\n      //console.log(\"props\",this.props.location.state.id);\r\n      const web3=window.web3;\r\n      const accounts=await web3.eth.getAccounts();\r\n      //var paccount = accounts[0];\r\n      //var oldaccount=this.state.account;\r\n      this.setState({account:accounts[0]});\r\n      window.ethereum.on('accountsChanged', function (accounts) {\r\n        // Time to reload your interface with accounts[0]!\r\n        alert(\"accoun changed\")\r\n        this.setState({account:accounts[0]});\r\n      }.bind(this));\r\n  \r\n      console.log(web3);\r\n      console.log(accounts);\r\n     // \r\n     const networkId=await web3.eth.net.getId();\r\n      const networkdata=PiratesCatcher.networks[networkId];\r\n      if(networkdata)\r\n      {\r\n        const piratescatcher=new web3.eth.Contract(PiratesCatcher.abi,networkdata.address);\r\n        console.log(piratescatcher);\r\n        this.setState({piratescatcher});\r\n        const counter=await piratescatcher.methods.counter().call();\r\n        this.setState({id:counter});\r\n      }\r\n      \r\n      \r\n    }\r\n    \r\n    \r\n    //handleClose = () => this.setState({ modalOpen: false })\r\n    \r\n   \r\n  \r\n   \r\n    handleconf = async (event) => {\r\n      event.preventDefault();\r\n     \r\n      //console.log(parseInt(this.state.quant)+10);\r\n      //console.log(this.state.id + this.state.toc + this.state.fromc + this.state.fno+this.state.tno+this.state.date+this.state.defcheck+this.state.emailid);\r\n      try {\r\n        //let reacth;\r\n        //let travel;\r\n        //test = (this.state.id + this.state.toc + this.state.fromc + this.state.expl+this.state.quant).toString();\r\n        //test = test.toLowerCase();\r\n        //console.log(test);\r\n        //reacth = crypt.SHA256(test).toString();\r\n        //console.log(reacth);\r\n        //const accounts = await web3.eth.getAccounts();\r\n        //console.log(accounts[0]);\r\n        //await trackpass.methods.storegold(reacth,(this.state.id).toString(),(this.state.quant).toString(),(this.state.toc).toString(),(this.state.fromc).toString(),(this.state.expl).toString(),parseInt(this.state.billamt)).send({\r\n          //from: accounts[0]\r\n        //});\r\n        //alert(this.state.id);\r\n        //alert(this.state.coreidea);\r\n        //alert(this.state.producer);\r\n        await this.state.piratescatcher.methods.preproduction((this.state.id),(this.state.cast).toString(),(this.state.budget).toString(),(this.state.shootlocation).toString()).send({\r\n          from: this.state.account\r\n        });\r\n  \r\n       \r\n        \r\n        \r\n  \r\n        this.setState({\r\n          loading: false,\r\n          id:0,\r\n          cast:'',\r\n          budget:'',\r\n          shootlocation:''\r\n        });\r\n  \r\n        window.open('/Production');\r\n      } catch (err) {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n         \r\n        });\r\n      }\r\n    }\r\n    \r\n    \r\n    handleChange = (event, {\r\n      name,\r\n      value\r\n    }) => {\r\n      if (this.state.hasOwnProperty(name)) {\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n    }\r\n    \r\n    \r\n  \r\n    render() {\r\n      return ( \r\n        <div>\r\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"/>\r\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n        <\r\n        Segment inverted color = 'black'>\r\n        \r\n        <h1 > <font color=\"white\">Preproduction Form</font> < /h1> \r\n        <Segment inverted color = \"grey\" >\r\n        <\r\n        Message attached header = 'Welcome to PiratesCatcher'\r\n        content = \"Enter your movie's preproduction details\"\r\n        icon = \"searchengin\"\r\n        color = 'black' /\r\n        >\r\n        <\r\n        Form >\r\n        <\r\n        br / >\r\n  \r\n  \r\n        <Form.Group widths='equal'>\r\n        <\r\n        Form.Field >\r\n        <\r\n        Input label = \"Id\"\r\n        fluid ref = {\r\n          (input) => {\r\n            this.id = input;\r\n          }\r\n        }\r\n        //  labelPosition=\"\"\r\n        value = {\r\n          this.state.id\r\n        }\r\n        onChange = {\r\n          event => this.setState({\r\n            id: event.target.value\r\n          })\r\n        }\r\n  \r\n        \r\n        /> \r\n        </Form.Field>\r\n        </Form.Group>\r\n\r\n        <br/>\r\n                <Form.Group widths='equal'>\r\n        <\r\n        Form.Field >\r\n        <\r\n        Input label = \"Cast\"\r\n  \r\n        fluid ref = {\r\n          (input) => {\r\n            this.cast = input;\r\n          }\r\n        }\r\n        //labelPosition=\"\"\r\n        value = {\r\n          this.state.cast\r\n        }\r\n        onChange = {\r\n          event => this.setState({\r\n            cast: event.target.value\r\n          })\r\n        }\r\n        /> \r\n        </Form.Field>\r\n        </Form.Group>\r\n        <br/>\r\n        <Form.Group widths='equal'>\r\n        <\r\n        Form.Field >\r\n        <\r\n        Input label = \"Budget\"\r\n        fluid ref = {\r\n          (input) => {\r\n            this.budget = input;\r\n          }\r\n        }\r\n        //  labelPosition=\"\"\r\n        value = {\r\n          this.state.budget\r\n        }\r\n        onChange = {\r\n          event => this.setState({\r\n            budget: event.target.value\r\n          })\r\n        }\r\n        /> \r\n        </ Form.Field>\r\n  \r\n        </Form.Group><br/>\r\n        <Form.Group widths='equal'>\r\n        <\r\n        Form.Field >\r\n        <\r\n        Input label = \"Shoot Location\"\r\n        fluid ref = {\r\n          (input) => {\r\n            this.shootlocation = input;\r\n          }\r\n        }\r\n        //  labelPosition=\"\"\r\n        value = {\r\n          this.state.shootlocation\r\n        }\r\n        onChange = {\r\n          event => this.setState({\r\n            shootlocation: event.target.value\r\n          })\r\n        }\r\n        /> \r\n        </ Form.Field>\r\n  \r\n        </Form.Group>\r\n            \r\n        \r\n        <br/>\r\n  \r\n        \r\n        \r\n        \r\n         <\r\n        br / >\r\n        <\r\n        Button loading = {\r\n          this.state.loading\r\n        }\r\n        disabled = {\r\n          this.state.id=='' || this.state.cast=='' || this.state.budget=='' || this.state.shootlocation==''\r\n        }\r\n        primary onClick = {\r\n          this.handleconf\r\n        }\r\n         > Save and Proceed < /Button>\r\n        \r\n        \r\n        </Form> \r\n        </Segment>  \r\n        </Segment>\r\n        </div>\r\n      );\r\n    }\r\n  }","F:\\VividhProject1\\pirates-catcher\\src\\components\\Production\\ProductionForm.js",["183","184","185","186","187","188","189","190","191","192","193"],"import React, {\r\n    Component\r\n  } from 'react';\r\n  import ReactDOM from 'react-dom';\r\n  //import Select from 'react-select';\r\n  import PiratesCatcher from '../../abis/PiratesCatcher.json';\r\n  import Web3 from 'web3';\r\n  import {\r\n    Form,\r\n    Modal,\r\n    Header,\r\n    Icon,\r\n    Button,\r\n    Input,\r\n    Dropdown,\r\n    Menu,\r\n    Radio,\r\n    Message,\r\n    Segment,\r\n    Checkbox,\r\n    Confirm\r\n  } from 'semantic-ui-react';\r\n  //import {\r\n    //DateInput\r\n  //} from 'semantic-ui-calendar-react';\r\n  //import ipfs from '../ipfs';\r\n\r\n  const ipfsClient = require('ipfs-http-client');\r\n  const ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }); // leaving out the arguments will default to these values\r\n  \r\n  export default class ProductionForm extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n        id:0,\r\n        buffer:'',\r\n        ipfshash:'',\r\n        piratescatcher:null\r\n        \r\n      };\r\n     \r\n    }\r\n  \r\n    async componentDidMount()\r\n    {\r\n      await this.loadWeb3();\r\n      await this.loadBlockchainData();\r\n    }\r\n    async loadWeb3()\r\n    {\r\n      if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          console.log(window.web3);\r\n          //console.log(web3.eth.getAccounts());\r\n          // Acccounts now exposed\r\n        } catch (error) {\r\n          // User denied account access...\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n        console.log(window.web3);\r\n        // Acccounts always exposed\r\n      }\r\n      // Non-dapp browsers...\r\n      else {\r\n        console.log(\r\n          \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n        );\r\n      }\r\n    }\r\n  \r\n    async loadBlockchainData()\r\n    {\r\n      //console.log(\"props\",this.props.location.state.id);\r\n      const web3=window.web3;\r\n      const accounts=await web3.eth.getAccounts();\r\n      //var paccount = accounts[0];\r\n      //var oldaccount=this.state.account;\r\n      this.setState({account:accounts[0]});\r\n      window.ethereum.on('accountsChanged', function (accounts) {\r\n        // Time to reload your interface with accounts[0]!\r\n        alert(\"account changed\")\r\n        this.setState({account:accounts[0]});\r\n      }.bind(this));\r\n  \r\n      console.log(web3);\r\n      console.log(accounts);\r\n     // \r\n     const networkId=await web3.eth.net.getId();\r\n      const networkdata=PiratesCatcher.networks[networkId];\r\n      if(networkdata)\r\n      {\r\n        const piratescatcher=new web3.eth.Contract(PiratesCatcher.abi,networkdata.address);\r\n        console.log(piratescatcher);\r\n        this.setState({piratescatcher});\r\n        const counter=await piratescatcher.methods.counter().call();\r\n        this.setState({id:counter});\r\n      }\r\n      \r\n      \r\n    }\r\n    \r\n    \r\n    //handleClose = () => this.setState({ modalOpen: false })\r\n    \r\n   \r\n  \r\n   \r\n    handleconf = async (event) => {\r\n      event.preventDefault();\r\n     \r\n      //console.log(parseInt(this.state.quant)+10);\r\n      //console.log(this.state.id + this.state.toc + this.state.fromc + this.state.fno+this.state.tno+this.state.date+this.state.defcheck+this.state.emailid);\r\n      try {\r\n        //let reacth;\r\n        //let travel;\r\n        //test = (this.state.id + this.state.toc + this.state.fromc + this.state.expl+this.state.quant).toString();\r\n        //test = test.toLowerCase();\r\n        //console.log(test);\r\n        //reacth = crypt.SHA256(test).toString();\r\n        //console.log(reacth);\r\n        //const accounts = await web3.eth.getAccounts();\r\n        //console.log(accounts[0]);\r\n        //await trackpass.methods.storegold(reacth,(this.state.id).toString(),(this.state.quant).toString(),(this.state.toc).toString(),(this.state.fromc).toString(),(this.state.expl).toString(),parseInt(this.state.billamt)).send({\r\n          //from: accounts[0]\r\n        //});\r\n        //alert(this.state.id);\r\n        //alert(this.state.coreidea);\r\n        //alert(this.state.producer);\r\n        await this.state.piratescatcher.methods.productionshoot((this.state.id),(this.state.ipfshash).toString()).send({\r\n          from: this.state.account\r\n        });\r\n  \r\n       \r\n        \r\n        \r\n  \r\n        this.setState({\r\n          loading: false,\r\n          id:0,\r\n          ipfshash:'',buffer:''\r\n        });\r\n  \r\n        window.open('/FinalEditing');\r\n      } catch (err) {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n         \r\n        });\r\n      }\r\n    }\r\n\r\n    handleonsubmit=async(event)=>{\r\n        event.preventDefault();\r\n        alert(\"on submit\");\r\n          console.log(\"handle submit\");\r\n          console.log(this.state.buffer);\r\n          ipfs.files.add(this.state.buffer,(error,result)=>{\r\n            if(error)\r\n            {\r\n            console.error(error);\r\n            return \r\n            }\r\n            this.setState({ipfshash:result[0].hash});\r\n            console.log('ipfshash',this.state.ipfshash);\r\n          })\r\n      }\r\n      captureFile=event=>{\r\n          alert(\"hellooooooo\");\r\n        event.preventDefault();\r\n        const file=event.target.files[0];\r\n        const reader=new window.FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n    \r\n        reader.onloadend=()=>{\r\n          this.setState({buffer:Buffer(reader.result)});\r\n          console.log(\"buffer\",this.state.buffer);\r\n        }\r\n      }\r\n\r\n      uploadImage=(event)=>{\r\n        event.preventDefault();\r\n\r\n        alert(\"hellooooooo\");\r\n        console.log(\"Submitting file to IPFS...\");\r\n\r\n        console.log(this.state.buffer);\r\n    \r\n        ipfs.add(this.state.buffer,(error,result)=>{\r\n          if(error)\r\n          {\r\n              alert(\"Error in uploading\");\r\n          }\r\n          else\r\n          {\r\n            console.log(\"ipfs hash\",result);\r\n           \r\n          }\r\n        });\r\n        \r\n    \r\n      }\r\n    \r\n    \r\n    handleChange = (event, {\r\n      name,\r\n      value\r\n    }) => {\r\n      if (this.state.hasOwnProperty(name)) {\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n    }\r\n    \r\n    \r\n  \r\n    render() {\r\n      return ( \r\n        <div>\r\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"/>\r\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n        <\r\n        Segment inverted color = 'black'>\r\n        \r\n        <h1 > <font color=\"white\">Production Form</font> < /h1> \r\n        <Segment inverted color = \"grey\" >\r\n        <\r\n        Message attached header = 'Welcome to PiratesCatcher'\r\n        content = \"Enter your movie's production details\"\r\n        icon = \"searchengin\"\r\n        color = 'black' /\r\n        >\r\n        <\r\n        Form >\r\n        <\r\n        br / >\r\n  \r\n  \r\n        <Form.Group widths='equal'>\r\n        <\r\n        Form.Field >\r\n        <\r\n        Input label = \"Id\"\r\n        fluid ref = {\r\n          (input) => {\r\n            this.id = input;\r\n          }\r\n        }\r\n        //  labelPosition=\"\"\r\n        value = {\r\n          this.state.id\r\n        }\r\n        onChange = {\r\n          event => this.setState({\r\n            id: event.target.value\r\n          })\r\n        }\r\n  \r\n        \r\n        /> \r\n        </Form.Field>\r\n       </Form.Group>\r\n            \r\n        \r\n        <br/>\r\n        <h2><font color=\"black\">Cover photo:</font></h2>\r\n        <form>\r\n       <input type=\"file\" onChange={this.captureFile}/>\r\n       <br/>\r\n       <input type=\"button\" name='Upload' value='Upload' className=\"btn btn-primary\" onClick={this.uploadImage}></input>\r\n       </form>\r\n       <br/><br/>\r\n        \r\n        \r\n        \r\n         <\r\n        br / >\r\n        <\r\n        Button loading = {\r\n          this.state.loading\r\n        }\r\n        disabled = {\r\n          this.state.id=='' || this.state.ipfshash==''\r\n        }\r\n        primary onClick = {\r\n          this.handleconf\r\n        }\r\n         > Save and Proceed < /Button>\r\n        \r\n        \r\n        </Form> \r\n        </Segment>  \r\n        </Segment>\r\n        </div>\r\n      );\r\n    }\r\n  }","F:\\VividhProject1\\pirates-catcher\\src\\components\\ipfs.js",[],["194","195"],"F:\\VividhProject1\\pirates-catcher\\src\\components\\FinalEditing\\Finalediting.js",["196","197","198","199","200","201","202","203","204","205","206"],"import React, {\r\n    Component\r\n  } from 'react';\r\n  import ReactDOM from 'react-dom';\r\n  //import Select from 'react-select';\r\n  import PiratesCatcher from '../../abis/PiratesCatcher.json';\r\n  import Web3 from 'web3';\r\n  import {\r\n    Form,\r\n    Modal,\r\n    Header,\r\n    Icon,\r\n    Button,\r\n    Input,\r\n    Dropdown,\r\n    Menu,\r\n    Radio,\r\n    Message,\r\n    Segment,\r\n    Checkbox,\r\n    Confirm\r\n  } from 'semantic-ui-react';\r\n  //import {\r\n    //DateInput\r\n  //} from 'semantic-ui-calendar-react';\r\n  const { SkynetClient } = require('@nebulous/skynet');\r\n\r\n  //import { SkynetClient } from \"skynet-js\";\r\n\r\n\r\n\r\n  export default class FinalEditing extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n        id:0,\r\n        siahash:'',\r\n        filename:'',\r\n        extension:'',\r\n        piratescatcher:null\r\n        \r\n      };\r\n      this.captureFile = this.captureFile.bind(this);\r\n      this.getFile = this.getFile.bind(this);\r\n    }\r\n  \r\n    async componentDidMount()\r\n    {\r\n      await this.loadWeb3();\r\n      await this.loadBlockchainData();\r\n    }\r\n    async loadWeb3()\r\n    {\r\n      if (window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          console.log(window.web3);\r\n          //console.log(web3.eth.getAccounts());\r\n          // Acccounts now exposed\r\n        } catch (error) {\r\n          // User denied account access...\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider);\r\n        console.log(window.web3);\r\n        // Acccounts always exposed\r\n      }\r\n      // Non-dapp browsers...\r\n      else {\r\n        console.log(\r\n          \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n        );\r\n      }\r\n    }\r\n  \r\n    async loadBlockchainData()\r\n    {\r\n      //console.log(\"props\",this.props.location.state.id);\r\n      const web3=window.web3;\r\n      const accounts=await web3.eth.getAccounts();\r\n      //var paccount = accounts[0];\r\n      //var oldaccount=this.state.account;\r\n      this.setState({account:accounts[0]});\r\n      window.ethereum.on('accountsChanged', function (accounts) {\r\n        // Time to reload your interface with accounts[0]!\r\n        alert(\"account changed\");\r\n        this.setState({account:accounts[0]});\r\n      }.bind(this));\r\n  \r\n      console.log(web3);\r\n      console.log(accounts);\r\n     // \r\n     const networkId=await web3.eth.net.getId();\r\n      const networkdata=PiratesCatcher.networks[networkId];\r\n      if(networkdata)\r\n      {\r\n        const piratescatcher=new web3.eth.Contract(PiratesCatcher.abi,networkdata.address);\r\n        console.log(piratescatcher);\r\n        this.setState({piratescatcher});\r\n        const counter=await piratescatcher.methods.counter().call();\r\n        this.setState({id:counter});\r\n      }\r\n      \r\n      \r\n    }\r\n    \r\n    \r\n    //handleClose = () => this.setState({ modalOpen: false })\r\n    getFile=(filePath)=> {\r\n        return filePath.substr(filePath.lastIndexOf('\\\\') + 1).split('.')[0];\r\n    }\r\n   captureFile=(event)=>{\r\n       \r\n       const inputfile=document.forms[\"siaupload\"][\"inputfile\"].value;\r\n       console.log(inputfile);\r\n\r\n       const filename=this.getFile(inputfile.toString());\r\n       console.log(filename);\r\n       const extension=inputfile.split('.')[1];\r\n       console.log(filename);\r\n       console.log(extension);\r\n       this.setState({filename:filename});\r\n       this.setState({extension:extension});\r\n       console.log(this.state.filename);\r\n       console.log(this.state.extension);\r\n   }\r\n\r\n   async uploadVideo(event) {\r\n     event.preventDefault();\r\n    try {\r\n\r\n      // create a client\r\n      const client = new SkynetClient();\r\n      // upload\r\n\r\n      var file=new File([\"\"],'data.txt');\r\n      console.log(file);\r\n      //const skylink = await client.uploadFile(file);\r\n    //console.log(`Upload successful, skylink: ${skylink}`);\r\n      const skylink = await client.uploadFile(file);\r\n      console.log(`Upload successful, skylink: ${skylink}`);\r\n  \r\n      // download\r\n      //await client.downloadFile(skylink);\r\n      //console.log('Download successful');\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  \r\n\r\n   \r\n  \r\n   \r\n    handleconf = async (event) => {\r\n      event.preventDefault();\r\n     \r\n      //console.log(parseInt(this.state.quant)+10);\r\n      //console.log(this.state.id + this.state.toc + this.state.fromc + this.state.fno+this.state.tno+this.state.date+this.state.defcheck+this.state.emailid);\r\n      try {\r\n        //let reacth;\r\n        //let travel;\r\n        //test = (this.state.id + this.state.toc + this.state.fromc + this.state.expl+this.state.quant).toString();\r\n        //test = test.toLowerCase();\r\n        //console.log(test);\r\n        //reacth = crypt.SHA256(test).toString();\r\n        //console.log(reacth);\r\n        //const accounts = await web3.eth.getAccounts();\r\n        //console.log(accounts[0]);\r\n        //await trackpass.methods.storegold(reacth,(this.state.id).toString(),(this.state.quant).toString(),(this.state.toc).toString(),(this.state.fromc).toString(),(this.state.expl).toString(),parseInt(this.state.billamt)).send({\r\n          //from: accounts[0]\r\n        //});\r\n        //alert(this.state.id);\r\n        //alert(this.state.coreidea);\r\n        //alert(this.state.producer);\r\n        await this.state.piratescatcher.methods.finalediting((this.state.id),(this.state.siahash).toString()).send({\r\n          from: this.state.account\r\n        });\r\n  \r\n       \r\n        \r\n        \r\n  \r\n        this.setState({\r\n          loading: false,\r\n          id:0\r\n        });\r\n  \r\n        window.open('/Done');\r\n      } catch (err) {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n         \r\n        });\r\n      }\r\n    }\r\n    \r\n    \r\n    handleChange = (event, {\r\n      name,\r\n      value\r\n    }) => {\r\n      if (this.state.hasOwnProperty(name)) {\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n    }\r\n    \r\n    \r\n  \r\n    render() {\r\n      return ( \r\n        <div>\r\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"/>\r\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n        <\r\n        Segment inverted color = 'black'>\r\n        \r\n        <h1 > <font color=\"white\">Final Editing Form</font> < /h1> \r\n        <Segment inverted color = \"grey\" >\r\n        <\r\n        Message attached header = 'Welcome to PiratesCatcher'\r\n        content = \"Enter your movie's final editing details\"\r\n        icon = \"searchengin\"\r\n        color = 'black' /\r\n        >\r\n        <\r\n        Form >\r\n        <\r\n        br / >\r\n  \r\n  \r\n        <Form.Group widths='equal'>\r\n        <\r\n        Form.Field >\r\n        <\r\n        Input label = \"Id\"\r\n        fluid ref = {\r\n          (input) => {\r\n            this.id = input;\r\n          }\r\n        }\r\n        //  labelPosition=\"\"\r\n        value = {\r\n          this.state.id\r\n        }\r\n        onChange = {\r\n          event => this.setState({\r\n            id: event.target.value\r\n          })\r\n        }\r\n  \r\n        \r\n        /> \r\n        </Form.Field>\r\n        </Form.Group>\r\n\r\n        <br/>\r\n        <form name=\"siaupload\">\r\n       <input type=\"file\" name=\"inputfile\" onChange={this.captureFile}/>\r\n       <br/>\r\n       <input type=\"button\" name='Upload' value='Upload' className=\"btn btn-primary\" onClick={this.uploadVideo}></input>\r\n       </form>\r\n            \r\n        \r\n        <br/>\r\n  \r\n        \r\n        \r\n        \r\n         <\r\n        br / >\r\n        <\r\n        Button loading = {\r\n          this.state.loading\r\n        }\r\n        disabled = {\r\n          this.state.id=='' || this.state.siahash=='' \r\n        }\r\n        primary onClick = {\r\n          this.handleconf\r\n        }\r\n         > Submit < /Button>\r\n        \r\n        \r\n        </Form> \r\n        </Segment>  \r\n        </Segment>\r\n        </div>\r\n      );\r\n    }\r\n  }",{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":14},{"ruleId":"207","replacedBy":"215"},{"ruleId":"209","replacedBy":"216"},{"ruleId":"211","severity":1,"message":"217","line":6,"column":8,"nodeType":"213","messageId":"214","endLine":6,"endColumn":18},{"ruleId":"211","severity":1,"message":"218","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":14},{"ruleId":"211","severity":1,"message":"219","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":16},{"ruleId":"211","severity":1,"message":"220","line":9,"column":8,"nodeType":"213","messageId":"214","endLine":9,"endColumn":13},{"ruleId":"211","severity":1,"message":"221","line":22,"column":8,"nodeType":"213","messageId":"214","endLine":22,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":27,"column":8,"nodeType":"213","messageId":"214","endLine":27,"endColumn":14},{"ruleId":"211","severity":1,"message":"222","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":15},{"ruleId":"211","severity":1,"message":"223","line":4,"column":9,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"224","line":18,"column":27,"nodeType":"213","messageId":"214","endLine":18,"endColumn":33},{"ruleId":"211","severity":1,"message":"212","line":19,"column":8,"nodeType":"213","messageId":"214","endLine":19,"endColumn":14},{"ruleId":"225","severity":1,"message":"226","line":16,"column":21,"nodeType":"227","endLine":16,"endColumn":68},{"ruleId":"211","severity":1,"message":"224","line":11,"column":27,"nodeType":"213","messageId":"214","endLine":11,"endColumn":33},{"ruleId":"228","severity":1,"message":"229","line":94,"column":13,"nodeType":"213","messageId":"230","endLine":94,"endColumn":18},{"ruleId":"231","severity":1,"message":"232","line":96,"column":33,"nodeType":"233","messageId":"234","endLine":96,"endColumn":35},{"ruleId":"235","severity":1,"message":"236","line":98,"column":26,"nodeType":"237","messageId":"238","endLine":98,"endColumn":38},{"ruleId":"207","replacedBy":"239"},{"ruleId":"209","replacedBy":"240"},{"ruleId":"225","severity":1,"message":"226","line":16,"column":21,"nodeType":"227","endLine":16,"endColumn":68},{"ruleId":"211","severity":1,"message":"241","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":16},{"ruleId":"211","severity":1,"message":"242","line":10,"column":3,"nodeType":"213","messageId":"214","endLine":10,"endColumn":8},{"ruleId":"211","severity":1,"message":"218","line":11,"column":3,"nodeType":"213","messageId":"214","endLine":11,"endColumn":9},{"ruleId":"211","severity":1,"message":"243","line":12,"column":3,"nodeType":"213","messageId":"214","endLine":12,"endColumn":7},{"ruleId":"211","severity":1,"message":"244","line":15,"column":3,"nodeType":"213","messageId":"214","endLine":15,"endColumn":11},{"ruleId":"211","severity":1,"message":"245","line":16,"column":3,"nodeType":"213","messageId":"214","endLine":16,"endColumn":7},{"ruleId":"211","severity":1,"message":"246","line":17,"column":3,"nodeType":"213","messageId":"214","endLine":17,"endColumn":8},{"ruleId":"211","severity":1,"message":"247","line":20,"column":3,"nodeType":"213","messageId":"214","endLine":20,"endColumn":11},{"ruleId":"211","severity":1,"message":"248","line":21,"column":3,"nodeType":"213","messageId":"214","endLine":21,"endColumn":10},{"ruleId":"231","severity":1,"message":"232","line":382,"column":22,"nodeType":"233","messageId":"234","endLine":382,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":382,"column":45,"nodeType":"233","messageId":"234","endLine":382,"endColumn":47},{"ruleId":"231","severity":1,"message":"232","line":382,"column":72,"nodeType":"233","messageId":"234","endLine":382,"endColumn":74},{"ruleId":"231","severity":1,"message":"232","line":382,"column":97,"nodeType":"233","messageId":"234","endLine":382,"endColumn":99},{"ruleId":"231","severity":1,"message":"232","line":382,"column":122,"nodeType":"233","messageId":"234","endLine":382,"endColumn":124},{"ruleId":"231","severity":1,"message":"232","line":382,"column":149,"nodeType":"233","messageId":"234","endLine":382,"endColumn":151},{"ruleId":"231","severity":1,"message":"232","line":382,"column":175,"nodeType":"233","messageId":"234","endLine":382,"endColumn":177},{"ruleId":"211","severity":1,"message":"241","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":18},{"ruleId":"211","severity":1,"message":"242","line":10,"column":5,"nodeType":"213","messageId":"214","endLine":10,"endColumn":10},{"ruleId":"211","severity":1,"message":"218","line":11,"column":5,"nodeType":"213","messageId":"214","endLine":11,"endColumn":11},{"ruleId":"211","severity":1,"message":"243","line":12,"column":5,"nodeType":"213","messageId":"214","endLine":12,"endColumn":9},{"ruleId":"211","severity":1,"message":"244","line":15,"column":5,"nodeType":"213","messageId":"214","endLine":15,"endColumn":13},{"ruleId":"211","severity":1,"message":"245","line":16,"column":5,"nodeType":"213","messageId":"214","endLine":16,"endColumn":9},{"ruleId":"211","severity":1,"message":"246","line":17,"column":5,"nodeType":"213","messageId":"214","endLine":17,"endColumn":10},{"ruleId":"211","severity":1,"message":"247","line":20,"column":5,"nodeType":"213","messageId":"214","endLine":20,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":21,"column":5,"nodeType":"213","messageId":"214","endLine":21,"endColumn":12},{"ruleId":"231","severity":1,"message":"232","line":282,"column":24,"nodeType":"233","messageId":"234","endLine":282,"endColumn":26},{"ruleId":"231","severity":1,"message":"232","line":282,"column":51,"nodeType":"233","messageId":"234","endLine":282,"endColumn":53},{"ruleId":"231","severity":1,"message":"232","line":282,"column":78,"nodeType":"233","messageId":"234","endLine":282,"endColumn":80},{"ruleId":"211","severity":1,"message":"241","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":18},{"ruleId":"211","severity":1,"message":"242","line":10,"column":5,"nodeType":"213","messageId":"214","endLine":10,"endColumn":10},{"ruleId":"211","severity":1,"message":"218","line":11,"column":5,"nodeType":"213","messageId":"214","endLine":11,"endColumn":11},{"ruleId":"211","severity":1,"message":"243","line":12,"column":5,"nodeType":"213","messageId":"214","endLine":12,"endColumn":9},{"ruleId":"211","severity":1,"message":"244","line":15,"column":5,"nodeType":"213","messageId":"214","endLine":15,"endColumn":13},{"ruleId":"211","severity":1,"message":"245","line":16,"column":5,"nodeType":"213","messageId":"214","endLine":16,"endColumn":9},{"ruleId":"211","severity":1,"message":"246","line":17,"column":5,"nodeType":"213","messageId":"214","endLine":17,"endColumn":10},{"ruleId":"211","severity":1,"message":"247","line":20,"column":5,"nodeType":"213","messageId":"214","endLine":20,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":21,"column":5,"nodeType":"213","messageId":"214","endLine":21,"endColumn":12},{"ruleId":"231","severity":1,"message":"232","line":306,"column":24,"nodeType":"233","messageId":"234","endLine":306,"endColumn":26},{"ruleId":"231","severity":1,"message":"232","line":306,"column":47,"nodeType":"233","messageId":"234","endLine":306,"endColumn":49},{"ruleId":"231","severity":1,"message":"232","line":306,"column":72,"nodeType":"233","messageId":"234","endLine":306,"endColumn":74},{"ruleId":"231","severity":1,"message":"232","line":306,"column":104,"nodeType":"233","messageId":"234","endLine":306,"endColumn":106},{"ruleId":"211","severity":1,"message":"241","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":18},{"ruleId":"211","severity":1,"message":"242","line":10,"column":5,"nodeType":"213","messageId":"214","endLine":10,"endColumn":10},{"ruleId":"211","severity":1,"message":"218","line":11,"column":5,"nodeType":"213","messageId":"214","endLine":11,"endColumn":11},{"ruleId":"211","severity":1,"message":"243","line":12,"column":5,"nodeType":"213","messageId":"214","endLine":12,"endColumn":9},{"ruleId":"211","severity":1,"message":"244","line":15,"column":5,"nodeType":"213","messageId":"214","endLine":15,"endColumn":13},{"ruleId":"211","severity":1,"message":"245","line":16,"column":5,"nodeType":"213","messageId":"214","endLine":16,"endColumn":9},{"ruleId":"211","severity":1,"message":"246","line":17,"column":5,"nodeType":"213","messageId":"214","endLine":17,"endColumn":10},{"ruleId":"211","severity":1,"message":"247","line":20,"column":5,"nodeType":"213","messageId":"214","endLine":20,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":21,"column":5,"nodeType":"213","messageId":"214","endLine":21,"endColumn":12},{"ruleId":"231","severity":1,"message":"232","line":292,"column":24,"nodeType":"233","messageId":"234","endLine":292,"endColumn":26},{"ruleId":"231","severity":1,"message":"232","line":292,"column":51,"nodeType":"233","messageId":"234","endLine":292,"endColumn":53},{"ruleId":"207","replacedBy":"249"},{"ruleId":"209","replacedBy":"250"},{"ruleId":"211","severity":1,"message":"241","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":18},{"ruleId":"211","severity":1,"message":"242","line":10,"column":5,"nodeType":"213","messageId":"214","endLine":10,"endColumn":10},{"ruleId":"211","severity":1,"message":"218","line":11,"column":5,"nodeType":"213","messageId":"214","endLine":11,"endColumn":11},{"ruleId":"211","severity":1,"message":"243","line":12,"column":5,"nodeType":"213","messageId":"214","endLine":12,"endColumn":9},{"ruleId":"211","severity":1,"message":"244","line":15,"column":5,"nodeType":"213","messageId":"214","endLine":15,"endColumn":13},{"ruleId":"211","severity":1,"message":"245","line":16,"column":5,"nodeType":"213","messageId":"214","endLine":16,"endColumn":9},{"ruleId":"211","severity":1,"message":"246","line":17,"column":5,"nodeType":"213","messageId":"214","endLine":17,"endColumn":10},{"ruleId":"211","severity":1,"message":"247","line":20,"column":5,"nodeType":"213","messageId":"214","endLine":20,"endColumn":13},{"ruleId":"211","severity":1,"message":"248","line":21,"column":5,"nodeType":"213","messageId":"214","endLine":21,"endColumn":12},{"ruleId":"231","severity":1,"message":"232","line":287,"column":24,"nodeType":"233","messageId":"234","endLine":287,"endColumn":26},{"ruleId":"231","severity":1,"message":"232","line":287,"column":50,"nodeType":"233","messageId":"234","endLine":287,"endColumn":52},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar",["251"],["252"],"'Navigation' is defined but never used.","'Header' is defined but never used.","'Features' is defined but never used.","'About' is defined but never used.","'Contact' is defined but never used.","'history' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-redeclare","'movie' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral",["251"],["252"],"'ReactDOM' is defined but never used.","'Modal' is defined but never used.","'Icon' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'Radio' is defined but never used.","'Checkbox' is defined but never used.","'Confirm' is defined but never used.",["251"],["252"],"no-global-assign","no-unsafe-negation"]